{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Mapview.tsx\";\nimport React from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport \"./Mapview.css\"; // スタイルを外部ファイルに分離\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = () => {\n  // 各都道府県の中心座標を定義\n  const hokkaido = [43.0646, 141.3468]; // 北海道の中心座標\n  const aomori = [40.8221, 140.7474]; // 青森県の中心座標\n  const akita = [39.7186, 140.1024]; // 秋田県の中心座標\n  const iwate = [39.5933, 141.3697]; // 岩手県の中心座標\n  const miyagi = [38.2688, 140.8719]; // 宮城県の中心座標\n  const yamagata = [38.2404, 140.363]; // 山形県の中心座標\n  const fukushima = [37.7503, 140.4675]; // 福島県の中心座標\n  const niigata = [37.5215, 138.9188]; // 新潟県の中心座標\n  const gunma = [36.3896, 139.0634]; // 群馬県の中心座標\n  const tochigi = [36.6893, 139.819]; // 栃木県の中心座標\n  const ibaraki = [36.3065, 140.3188]; // 茨城県の中心座標\n  const tiba = [35.6073, 140.106]; // 千葉県の中心座標\n  const saitama = [35.9975, 139.3476]; // 埼玉県の中心座標\n  const tokyo = [35.6895, 139.6917]; // 東京都の中心座標\n  const kanagawa = [35.4475, 139.6425]; // 神奈川県の中心座標\n  const yamanashi = [35.6122, 138.6116]; // 山梨県の中心座標\n  const sizuoka = [34.9769, 138.383]; // 静岡県の中心座標\n  const aichi = [35.1802, 136.9064]; // 愛知県の中心座標\n  const nagano = [36.6513, 138.181]; // 長野県の中心座標\n  const toyama = [36.6953, 137.2113]; // 富山県の中心座標\n  const isikawa = [36.5947, 136.6256]; // 石川県の中心座標\n  const gihu = [35.7774, 137.055]; // 岐阜県の中心座標\n  const hukui = [35.8469, 136.2276]; // 福井県の中心座標\n  const kyouto = [35.0116, 135.7681]; // 京都府の中心座標\n  const shiga = [35.2153, 136.138]; // 滋賀県の中心座標\n  const mie = [34.7303, 136.5086]; // 三重県の中心座標\n  const nara = [34.6851, 135.8049]; // 奈良県の中心座標\n  const wakayama = [34.2261, 135.1675]; // 和歌山県の中心座標\n  const osaka = [34.6937, 135.5023]; // 大阪府の中心座標\n  const hyougo = [34.6913, 135.183]; // 兵庫県の中心座標\n  const tottori = [35.3606, 133.8514]; // 鳥取県の中心座標\n  const okayama = [34.8964, 133.637]; // 岡山県の中心座標\n  const kagawa = [34.2437, 133.996]; // 香川県の中心座標\n  const tokushima = [33.9181, 134.242]; // 徳島県の中心座標\n  const kouti = [33.6068, 133.7751]; // 高知県の中心座標\n  const ehime = [33.6248, 132.8131]; // 愛媛県の中心座標\n  const hiroshima = [34.3853, 132.4553]; // 広島県の中心座標\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: tokyo,\n    zoom: 5,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: tokyo,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"\\u6771\\u4EAC\\u90FD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","MapView","hokkaido","aomori","akita","iwate","miyagi","yamagata","fukushima","niigata","gunma","tochigi","ibaraki","tiba","saitama","tokyo","kanagawa","yamanashi","sizuoka","aichi","nagano","toyama","isikawa","gihu","hukui","kyouto","shiga","mie","nara","wakayama","osaka","hyougo","tottori","okayama","kagawa","tokushima","kouti","ehime","hiroshima","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["/app/src/components/Mapview.tsx"],"sourcesContent":["import React from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport \"./Mapview.css\"; // スタイルを外部ファイルに分離\n\nconst MapView: React.FC = () => {\n  \n\n  // 各都道府県の中心座標を定義\n  const hokkaido: [number, number] = [43.0646, 141.3468]; // 北海道の中心座標\n  const aomori: [number, number] = [40.8221, 140.7474]; // 青森県の中心座標\n  const akita: [number, number] = [39.7186, 140.1024]; // 秋田県の中心座標\n  const iwate: [number, number] = [39.5933, 141.3697]; // 岩手県の中心座標\n  const miyagi: [number, number] = [38.2688, 140.8719]; // 宮城県の中心座標\n  const yamagata: [number, number] = [38.2404, 140.363]; // 山形県の中心座標\n  const fukushima: [number, number] = [37.7503, 140.4675]; // 福島県の中心座標\n  const niigata: [number, number] = [37.5215, 138.9188]; // 新潟県の中心座標\n  const gunma: [number, number] = [36.3896, 139.0634]; // 群馬県の中心座標\n  const tochigi: [number, number] = [36.6893, 139.819]; // 栃木県の中心座標\n  const ibaraki: [number, number] = [36.3065, 140.3188]; // 茨城県の中心座標\n  const tiba: [number, number] = [35.6073, 140.106]; // 千葉県の中心座標\n  const saitama: [number, number] = [35.9975, 139.3476]; // 埼玉県の中心座標\n  const tokyo: [number, number] = [35.6895, 139.6917]; // 東京都の中心座標\n  const kanagawa: [number, number] = [35.4475, 139.6425]; // 神奈川県の中心座標\n  const yamanashi: [number, number] = [35.6122, 138.6116]; // 山梨県の中心座標\n  const sizuoka: [number, number] = [34.9769, 138.383]; // 静岡県の中心座標\n  const aichi: [number, number] = [35.1802, 136.9064]; // 愛知県の中心座標\n  const nagano: [number, number] = [36.6513, 138.181]; // 長野県の中心座標\n  const toyama: [number, number] = [36.6953, 137.2113]; // 富山県の中心座標\n  const isikawa: [number, number] = [36.5947, 136.6256]; // 石川県の中心座標\n  const gihu: [number, number] = [35.7774, 137.055]; // 岐阜県の中心座標\n  const hukui: [number, number] = [35.8469, 136.2276]; // 福井県の中心座標\n  const kyouto: [number, number] = [35.0116, 135.7681]; // 京都府の中心座標\n  const shiga: [number, number] = [35.2153, 136.138]; // 滋賀県の中心座標\n  const mie: [number, number] = [34.7303, 136.5086]; // 三重県の中心座標\n  const nara: [number, number] = [34.6851, 135.8049]; // 奈良県の中心座標\n  const wakayama: [number, number] = [34.2261, 135.1675]; // 和歌山県の中心座標\n  const osaka: [number, number] = [34.6937, 135.5023]; // 大阪府の中心座標\n  const hyougo: [number, number] = [34.6913, 135.183]; // 兵庫県の中心座標\n  const tottori: [number, number] = [35.3606, 133.8514]; // 鳥取県の中心座標\n  const okayama: [number, number] = [34.8964, 133.637]; // 岡山県の中心座標\n  const kagawa: [number, number] = [34.2437, 133.996]; // 香川県の中心座標\n  const tokushima: [number, number] = [33.9181, 134.242]; // 徳島県の中心座標\n  const kouti: [number, number] = [33.6068, 133.7751]; // 高知県の中心座標\n  const ehime: [number, number] = [33.6248, 132.8131]; // 愛媛県の中心座標\n  const hiroshima: [number, number] = [34.3853, 132.4553]; // 広島県の中心座標\n\n  return (\n    <MapContainer center={tokyo} zoom={5} style={{ height: \"100vh\", width: \"100%\" }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={tokyo}>\n        <Popup>東京都</Popup>\n      </Marker>\n      {/* 他のマーカーも同様に追加 */}\n    </MapContainer>\n  );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}