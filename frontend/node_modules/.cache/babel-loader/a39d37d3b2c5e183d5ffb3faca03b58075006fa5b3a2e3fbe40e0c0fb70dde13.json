{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Mapview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { JapanMap } from './JapanMap';\nimport { Prefectures } from '../data/Prefectures';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MapView = () => {\n  _s();\n  var _Prefectures$find;\n  const [player, setPlayer] = useState({\n    currentCheckpoint: 1,\n    // 北海道からスタート\n    points: 0\n  });\n  const movePlayer = steps => {\n    setPlayer(prev => {\n      const newPrefectureId = prev.currentCheckpoint + steps;\n      const nextPrefecture = newPrefectureId > Prefectures.length ? Prefectures.length : newPrefectureId;\n      handleEvent(nextPrefecture);\n      return {\n        ...prev,\n        currentPrefecture: nextPrefecture\n      };\n    });\n  };\n  const handleEvent = prefectureId => {\n    const currentPrefecture = Prefectures.find(p => p.id === prefectureId);\n    if (!currentPrefecture) return;\n    switch (currentPrefecture.event) {\n      case 'goal':\n        alert(`${currentPrefecture.name}: ゴール！おめでとうございます！`);\n        break;\n      default:\n        console.log(`${currentPrefecture.name}: 通常のマスです。`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65E5\\u672C\\u5730\\u56F3\\u30B2\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u5730: \", (_Prefectures$find = Prefectures.find(p => p.id === player.currentCheckpoint)) === null || _Prefectures$find === void 0 ? void 0 : _Prefectures$find.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JapanMap, {\n      currentPrefectureId: player.currentCheckpoint,\n      onClickPrefecture: name => {\n        var _Prefectures$find2;\n        return alert(`選択された都道府県: ${(_Prefectures$find2 = Prefectures.find(p => p.id === player.currentCheckpoint)) === null || _Prefectures$find2 === void 0 ? void 0 : _Prefectures$find2.name}`);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"PRxVynYHfMab84Qzi0Bdn0XtubI=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","JapanMap","Prefectures","jsxDEV","_jsxDEV","MapView","_s","_Prefectures$find","player","setPlayer","currentCheckpoint","points","movePlayer","steps","prev","newPrefectureId","nextPrefecture","length","handleEvent","currentPrefecture","prefectureId","find","p","id","event","alert","name","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPrefectureId","onClickPrefecture","_Prefectures$find2","_c","$RefreshReg$"],"sources":["/app/src/components/Mapview.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { JapanMap } from './JapanMap';\nimport { Prefectures, Checkpoint } from '../data/Prefectures';\n\ninterface Player {\n  currentCheckpoint: number;\n  points: number;\n}\n\nexport const MapView: React.FC = () => {\n  const [player, setPlayer] = useState<Player>({\n    currentCheckpoint: 1, // 北海道からスタート\n    points: 0,\n  });\n\n    const movePlayer = (steps: number) => {\n    setPlayer((prev) => {\n      const newPrefectureId = prev.currentCheckpoint + steps;\n      const nextPrefecture =\n        newPrefectureId > Prefectures.length\n          ? Prefectures.length\n          : newPrefectureId;\n\n      handleEvent(nextPrefecture);\n\n      return { ...prev, currentPrefecture: nextPrefecture };\n    });\n  };\n\n  const handleEvent = (prefectureId: number) => {\n    const currentPrefecture = Prefectures.find((p: Checkpoint) => p.id === prefectureId);\n    if (!currentPrefecture) return;\n\n    switch (currentPrefecture.event) {\n      case 'goal':\n        alert(`${currentPrefecture.name}: ゴール！おめでとうございます！`);\n        break;\n      default:\n        console.log(`${currentPrefecture.name}: 通常のマスです。`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>日本地図ゲーム</h1>\n      <p>\n        現在地: {Prefectures.find((p: Checkpoint) => p.id === player.currentCheckpoint)?.name}\n      </p>\n      <JapanMap\n        currentPrefectureId={player.currentCheckpoint}\n        onClickPrefecture={(name) => alert(`選択された都道府県: ${Prefectures.find((p: Checkpoint) => p.id === player.currentCheckpoint)?.name}`)}\n      />\n    </div>\n    \n  );\n};\n\nexport default MapView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,WAAW,QAAoB,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9D,OAAO,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAS;IAC3CU,iBAAiB,EAAE,CAAC;IAAE;IACtBC,MAAM,EAAE;EACV,CAAC,CAAC;EAEA,MAAMC,UAAU,GAAIC,KAAa,IAAK;IACtCJ,SAAS,CAAEK,IAAI,IAAK;MAClB,MAAMC,eAAe,GAAGD,IAAI,CAACJ,iBAAiB,GAAGG,KAAK;MACtD,MAAMG,cAAc,GAClBD,eAAe,GAAGb,WAAW,CAACe,MAAM,GAChCf,WAAW,CAACe,MAAM,GAClBF,eAAe;MAErBG,WAAW,CAACF,cAAc,CAAC;MAE3B,OAAO;QAAE,GAAGF,IAAI;QAAEK,iBAAiB,EAAEH;MAAe,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,WAAW,GAAIE,YAAoB,IAAK;IAC5C,MAAMD,iBAAiB,GAAGjB,WAAW,CAACmB,IAAI,CAAEC,CAAa,IAAKA,CAAC,CAACC,EAAE,KAAKH,YAAY,CAAC;IACpF,IAAI,CAACD,iBAAiB,EAAE;IAExB,QAAQA,iBAAiB,CAACK,KAAK;MAC7B,KAAK,MAAM;QACTC,KAAK,CAAC,GAAGN,iBAAiB,CAACO,IAAI,mBAAmB,CAAC;QACnD;MACF;QACEC,OAAO,CAACC,GAAG,CAAC,GAAGT,iBAAiB,CAACO,IAAI,YAAY,CAAC;IACtD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB7B,OAAA;MAAAyB,QAAA,GAAG,sBACI,GAAAtB,iBAAA,GAACL,WAAW,CAACmB,IAAI,CAAEC,CAAa,IAAKA,CAAC,CAACC,EAAE,KAAKf,MAAM,CAACE,iBAAiB,CAAC,cAAAH,iBAAA,uBAAtEA,iBAAA,CAAwEmB,IAAI;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,eACJ7B,OAAA,CAACH,QAAQ;MACPiC,mBAAmB,EAAE1B,MAAM,CAACE,iBAAkB;MAC9CyB,iBAAiB,EAAGT,IAAI;QAAA,IAAAU,kBAAA;QAAA,OAAKX,KAAK,CAAC,eAAAW,kBAAA,GAAclC,WAAW,CAACmB,IAAI,CAAEC,CAAa,IAAKA,CAAC,CAACC,EAAE,KAAKf,MAAM,CAACE,iBAAiB,CAAC,cAAA0B,kBAAA,uBAAtEA,kBAAA,CAAwEV,IAAI,EAAE,CAAC;MAAA;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGV,CAAC;AAAC3B,EAAA,CA9CWD,OAAiB;AAAAgC,EAAA,GAAjBhC,OAAiB;AAgD9B,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}